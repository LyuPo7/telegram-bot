-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema BotCommandScopeAllChatAdministrators
module StripeAPI.Types.BotCommandScopeAllChatAdministrators where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.BotCommandScopeAllChatAdministrators@ in the specification.
-- 
-- Represents the [scope](https:\/\/core.telegram.org\/bots\/api\/\#botcommandscope) of bot commands, covering all group and supergroup chat administrators.
data BotCommandScopeAllChatAdministrators = BotCommandScopeAllChatAdministrators {
  -- | type: Scope type, must be *all\\_chat\\_administrators*
  botCommandScopeAllChatAdministratorsType :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON BotCommandScopeAllChatAdministrators
    where toJSON obj = Data.Aeson.Types.Internal.object ("type" Data.Aeson.Types.ToJSON..= botCommandScopeAllChatAdministratorsType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("type" Data.Aeson.Types.ToJSON..= botCommandScopeAllChatAdministratorsType obj)
instance Data.Aeson.Types.FromJSON.FromJSON BotCommandScopeAllChatAdministrators
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "BotCommandScopeAllChatAdministrators" (\obj -> GHC.Base.pure BotCommandScopeAllChatAdministrators GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))
-- | Create a new 'BotCommandScopeAllChatAdministrators' with all required fields.
mkBotCommandScopeAllChatAdministrators :: Data.Text.Internal.Text -- ^ 'botCommandScopeAllChatAdministratorsType'
  -> BotCommandScopeAllChatAdministrators
mkBotCommandScopeAllChatAdministrators botCommandScopeAllChatAdministratorsType = BotCommandScopeAllChatAdministrators{botCommandScopeAllChatAdministratorsType = botCommandScopeAllChatAdministratorsType}
