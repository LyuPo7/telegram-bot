-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ChatJoinRequest
module StripeAPI.Types.ChatJoinRequest where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Chat
import {-# SOURCE #-} StripeAPI.Types.ChatInviteLink
import {-# SOURCE #-} StripeAPI.Types.User

-- | Defines the object schema located at @components.schemas.ChatJoinRequest@ in the specification.
-- 
-- Represents a join request sent to a chat.
data ChatJoinRequest = ChatJoinRequest {
  -- | bio: *Optional*. Bio of the user.
  chatJoinRequestBio :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | chat: This object represents a chat.
  , chatJoinRequestChat :: Chat
  -- | date: Date the request was sent in Unix time
  , chatJoinRequestDate :: GHC.Types.Int
  -- | from: This object represents a Telegram user or bot.
  , chatJoinRequestFrom :: User
  -- | invite_link: Represents an invite link for a chat.
  , chatJoinRequestInviteLink :: (GHC.Maybe.Maybe ChatInviteLink)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ChatJoinRequest
    where toJSON obj = Data.Aeson.Types.Internal.object ("bio" Data.Aeson.Types.ToJSON..= chatJoinRequestBio obj : "chat" Data.Aeson.Types.ToJSON..= chatJoinRequestChat obj : "date" Data.Aeson.Types.ToJSON..= chatJoinRequestDate obj : "from" Data.Aeson.Types.ToJSON..= chatJoinRequestFrom obj : "invite_link" Data.Aeson.Types.ToJSON..= chatJoinRequestInviteLink obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("bio" Data.Aeson.Types.ToJSON..= chatJoinRequestBio obj) GHC.Base.<> (("chat" Data.Aeson.Types.ToJSON..= chatJoinRequestChat obj) GHC.Base.<> (("date" Data.Aeson.Types.ToJSON..= chatJoinRequestDate obj) GHC.Base.<> (("from" Data.Aeson.Types.ToJSON..= chatJoinRequestFrom obj) GHC.Base.<> ("invite_link" Data.Aeson.Types.ToJSON..= chatJoinRequestInviteLink obj)))))
instance Data.Aeson.Types.FromJSON.FromJSON ChatJoinRequest
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ChatJoinRequest" (\obj -> ((((GHC.Base.pure ChatJoinRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bio")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "chat")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "from")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invite_link"))
-- | Create a new 'ChatJoinRequest' with all required fields.
mkChatJoinRequest :: Chat -- ^ 'chatJoinRequestChat'
  -> GHC.Types.Int -- ^ 'chatJoinRequestDate'
  -> User -- ^ 'chatJoinRequestFrom'
  -> ChatJoinRequest
mkChatJoinRequest chatJoinRequestChat chatJoinRequestDate chatJoinRequestFrom = ChatJoinRequest{chatJoinRequestBio = GHC.Maybe.Nothing,
                                                                                                chatJoinRequestChat = chatJoinRequestChat,
                                                                                                chatJoinRequestDate = chatJoinRequestDate,
                                                                                                chatJoinRequestFrom = chatJoinRequestFrom,
                                                                                                chatJoinRequestInviteLink = GHC.Maybe.Nothing}
