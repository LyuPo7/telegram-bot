-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postExportChatInviteLink
module StripeAPI.Operations.PostExportChatInviteLink where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /exportChatInviteLink
-- 
-- Use this method to generate a new primary invite link for a chat; any previously generated primary link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the new invite link as *String* on success.
postExportChatInviteLink :: forall m . StripeAPI.Common.MonadHTTP m => PostExportChatInviteLinkRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostExportChatInviteLinkResponse) -- ^ Monadic computation which returns the result of the operation
postExportChatInviteLink body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostExportChatInviteLinkResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostExportChatInviteLinkResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                           PostExportChatInviteLinkResponseBody200)
                                                                                                                                                                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostExportChatInviteLinkResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                             Error)
                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/exportChatInviteLink") GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/exportChatInviteLink.POST.requestBody.content.application\/json.schema@ in the specification.
-- 
-- 
data PostExportChatInviteLinkRequestBody = PostExportChatInviteLinkRequestBody {
  -- | chat_id: Unique identifier for the target chat or username of the target channel (in the format \`\@channelusername\`)
  postExportChatInviteLinkRequestBodyChatId :: PostExportChatInviteLinkRequestBodyChatId'Variants
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostExportChatInviteLinkRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("chat_id" Data.Aeson.Types.ToJSON..= postExportChatInviteLinkRequestBodyChatId obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("chat_id" Data.Aeson.Types.ToJSON..= postExportChatInviteLinkRequestBodyChatId obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostExportChatInviteLinkRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostExportChatInviteLinkRequestBody" (\obj -> GHC.Base.pure PostExportChatInviteLinkRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "chat_id"))
-- | Create a new 'PostExportChatInviteLinkRequestBody' with all required fields.
mkPostExportChatInviteLinkRequestBody :: PostExportChatInviteLinkRequestBodyChatId'Variants -- ^ 'postExportChatInviteLinkRequestBodyChatId'
  -> PostExportChatInviteLinkRequestBody
mkPostExportChatInviteLinkRequestBody postExportChatInviteLinkRequestBodyChatId = PostExportChatInviteLinkRequestBody{postExportChatInviteLinkRequestBodyChatId = postExportChatInviteLinkRequestBodyChatId}
-- | Defines the oneOf schema located at @paths.\/exportChatInviteLink.POST.requestBody.content.application\/json.schema.properties.chat_id.anyOf@ in the specification.
-- 
-- Unique identifier for the target chat or username of the target channel (in the format \`\@channelusername\`)
data PostExportChatInviteLinkRequestBodyChatId'Variants =
   PostExportChatInviteLinkRequestBodyChatId'Int GHC.Types.Int
  | PostExportChatInviteLinkRequestBodyChatId'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostExportChatInviteLinkRequestBodyChatId'Variants
    where toJSON (PostExportChatInviteLinkRequestBodyChatId'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostExportChatInviteLinkRequestBodyChatId'Text a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON PostExportChatInviteLinkRequestBodyChatId'Variants
    where parseJSON val = case (PostExportChatInviteLinkRequestBodyChatId'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PostExportChatInviteLinkRequestBodyChatId'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Represents a response of the operation 'postExportChatInviteLink'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostExportChatInviteLinkResponseError' is used.
data PostExportChatInviteLinkResponse =
   PostExportChatInviteLinkResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostExportChatInviteLinkResponse200 PostExportChatInviteLinkResponseBody200 -- ^ 
  | PostExportChatInviteLinkResponseDefault Error -- ^ 
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/exportChatInviteLink.POST.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data PostExportChatInviteLinkResponseBody200 = PostExportChatInviteLinkResponseBody200 {
  -- | ok
  postExportChatInviteLinkResponseBody200Ok :: GHC.Types.Bool
  -- | result
  , postExportChatInviteLinkResponseBody200Result :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostExportChatInviteLinkResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object ("ok" Data.Aeson.Types.ToJSON..= postExportChatInviteLinkResponseBody200Ok obj : "result" Data.Aeson.Types.ToJSON..= postExportChatInviteLinkResponseBody200Result obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("ok" Data.Aeson.Types.ToJSON..= postExportChatInviteLinkResponseBody200Ok obj) GHC.Base.<> ("result" Data.Aeson.Types.ToJSON..= postExportChatInviteLinkResponseBody200Result obj))
instance Data.Aeson.Types.FromJSON.FromJSON PostExportChatInviteLinkResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostExportChatInviteLinkResponseBody200" (\obj -> (GHC.Base.pure PostExportChatInviteLinkResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ok")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "result"))
-- | Create a new 'PostExportChatInviteLinkResponseBody200' with all required fields.
mkPostExportChatInviteLinkResponseBody200 :: GHC.Types.Bool -- ^ 'postExportChatInviteLinkResponseBody200Ok'
  -> Data.Text.Internal.Text -- ^ 'postExportChatInviteLinkResponseBody200Result'
  -> PostExportChatInviteLinkResponseBody200
mkPostExportChatInviteLinkResponseBody200 postExportChatInviteLinkResponseBody200Ok postExportChatInviteLinkResponseBody200Result = PostExportChatInviteLinkResponseBody200{postExportChatInviteLinkResponseBody200Ok = postExportChatInviteLinkResponseBody200Ok,
                                                                                                                                                                            postExportChatInviteLinkResponseBody200Result = postExportChatInviteLinkResponseBody200Result}
